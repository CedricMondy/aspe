% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_temp_peuplement.R
\name{gg_temp_peuplement}
\alias{gg_temp_peuplement}
\title{Graphique pour représenter l'évolution des effectifs de taxons au cours du temps}
\usage{
gg_temp_peuplement(df, interactif = FALSE, largeur = 6, hauteur = 5, ...)
}
\arguments{
\item{df}{Dataframe contenant les données des effectifs capturés pour les taxons.  Il doit contenir des variables "effectif"
et "annee" ainsi qu'une variable permettant d'identifier la station ou le point de
prélèvement. Il doit également contenir une variable 'pro_libelle' correspondant aux protocoles (à ajouter avec la \code{aspe::mef_ajouter_type_protocole()}).}

\item{interactif}{Valeur logique: statique (FALSE) produit avec `ggplot2` ou interactif (TRUE) produit avec `ggiraph`.}

\item{largeur, hauteur}{dimensions des graphiques interactifs}

\item{...}{arguments passés à la fonction \code{ggiraph::opts_sizing()}}
}
\value{
Retourne une liste de graphiques pour les stations ou points, graphiques statiques `ggplot2` ou interactifs `ggiraph`.
}
\description{
La fonction permet de visualiser la dynamique des taxons dans le peuplement sur une station. Les taxons sont représentés
    par des points, proportionnels aux effectifs capturés. Les protocoles utilisés sont également représentés.
}
\examples{
\dontrun{
captures <- data \%>\%
 group_by(
   sta_id,
   pop_id,
   ope_id,
   ope_date,
   annee,
   esp_code_alternatif,
   ope_surface_calculee,
   pop_libelle
 ) \%>\%
 summarise(effectif = sum(lop_effectif, na.rm = TRUE)) \%>\%
 ungroup() \%>\%
 mef_ajouter_type_protocole() \%>\%
 filter(pro_libelle \%in\% c("Pêche complète à un ou plusieurs passages",
                           "Pêche partielle par points (grand milieu)",
                           "Pêche par ambiances",
                           "Pêche partielle sur berge"))

id_sta_sel <- captures \%>\% filter(!is.na(sta_id)) \%>\% pull(sta_id) \%>\% unique() \%>\% sample(5)

captures_sel <- captures \%>\% filter(sta_id \%in\% id_sta_sel)

graph_interactif <- gg_temp_peuplement(captures_sel, interactif = T)
graph_interactif[[1]]

graph_static <- gg_temp_peuplement(captures_sel, interactif = F)
graph_static[[1]]

}
}
