% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo_convertir_coords_df.R
\name{geo_convertir_coords_df}
\alias{geo_convertir_coords_df}
\title{Extraire des coordonnées homogénéisées à partir d'un dataframe contenant des coordonnées en différents CRS}
\usage{
geo_convertir_coords_df(
  df,
  var_x,
  var_y,
  var_id,
  var_crs_initial,
  crs_sortie = 4326
)
}
\arguments{
\item{df}{Dataframe contenant au moins trois colonnes pour les coordonnées et le
système de coordonnées (CRS)}

\item{var_x}{Colonne qui contient la longitude.}

\item{var_y}{Colonne qui contient la latitude.}

\item{var_id}{Colonne qui contient les identifiants des objets (=lignes) de df.}

\item{var_crs_initial}{Colonne qui contient le numéro EPSG du CRS de chacune
des observations (par exemple des stations ou des points).}

\item{crs_sortie}{Numérique entier. Le numéro EPSG du CRS de sortie. Par défaut
c'est en WGS84 (crs = 4326).}
}
\value{
Un dataframe à deux colonnes contenant les coordonnées dans le CRS de sortie.
}
\description{
Les observations (lignes du df) sont reprojetées dans le CRS de sortie.
}
\details{
Le dataframe d'entrée doit comprendre des colonnes indiquant longitude, latitude,
    code EPSG du système de coordonnées, identifiant de l'observation.
}
\examples{
\dontrun{
# Comme la table station de la base Aspe ne comprend pas le code EPSG mais un code de CRS interne,
# il faut le rajouter avant la conversion.
data <- station \%>\%
  left_join(y = ref_type_projection, by = c("sta_typ_id" = "typ_id"))

coords_wgs84 <- geo_convertir_coords_df (df = data,
    var_x = sta_coordonnees_x,
    var_y = sta_coordonnees_y,
    var_id = sta_id,
    var_crs_initial = typ_code_epsg)
}
}
